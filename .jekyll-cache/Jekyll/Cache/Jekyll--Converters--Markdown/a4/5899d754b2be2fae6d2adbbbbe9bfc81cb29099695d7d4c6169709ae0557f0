I" )<p>Maintenance-free bike rentals database</p>

<p><br />
<br /></p>

<p>Code can be viewed at following github page:
<br />
<a href=" https://github.com/krystianwarda/bike_rental_pyspark">
https://github.com/krystianwarda/bike_rental_pyspark</a>
<br /></p>

<h3 id="1-context">1. Context</h3>
<p>This data set is taken from https://www.fordgobike.com/system-data and represents trips taken by members of the service for month of February of 2019.</p>

<h3 id="2-content">2. Content</h3>
<p>Data consists of info about trips taken by service’s members, their types, their age, their gender, stations of starting and ending trips, duration of trips etc.</p>

<h3 id="3-acknowledgements">3. Acknowledgements</h3>
<p>Thanks to ford gobike service for providing data online.</p>

<h3 id="4-data-analysis">4. Data Analysis</h3>
<p>Database on which the analysis was performed consist of following features: <br />
Trip Duration (seconds),<br />
Start Time and Date, <br />
End Time and Date, <br />
Start Station ID, <br />
Start Station Name, <br />
Start Station Latitude, <br />
Start Station Longitude, <br />
End Station ID, <br />
End Station Name,<br />
End Station Latitude,<br />
End Station Longitude,<br />
Bike ID,<br />
User Type,<br />
Member Year of Birth,<br />
Member Gender.<br /></p>

<h3 id="distribution-of-the-variable-member_gender">Distribution of the variable “member_gender”</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>df.groupBy('member_gender').agg(
    F.expr("count(member_gender)").alias("No of records")).show()
</code></pre></div></div>

<p><br /></p>
<table style="width:300px">
  <tr>
    <th>member_gender</th>
    <th>No of records</th>
  </tr>
  <tr>
    <td>null</td>
    <td>0</td>
  </tr>
  <tr>
    <td>Female</td>
    <td>98621</td>
  </tr>
  <tr>
    <td>Other</td>
    <td>6299</td>
  </tr>
  <tr>
    <td>Male</td>
    <td>348318</td>
  </tr>
</table>

<p><br /></p>

<h3 id="the-minimum-maximum-and-average-age-of-bicycle-rentals">The minimum, maximum and average age of bicycle rentals</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>df = df.withColumn("Age", 2017 - df.member_birth_year).alias("Age")
df.groupBy('member_gender').agg(
    F.expr("avg(Age)").alias("AVG Age"),
    F.expr("min(Age)").alias("MIN Age"),
    F.expr("max(Age)").alias("MAX Age")
).withColumn('AVG Age', F.round(F.col('AVG Age'), 0).cast('integer')).show()
</code></pre></div></div>
<p><br /></p>

<table style="width:500px">
  <tr>
    <th>member_gender</th>
    <th>AVG Age</th>
    <th>MIN Age</th>
    <th>MAX Age</th>
  </tr>
  <tr>
    <td>null</td>
    <td>null</td>
    <td>null</td>
    <td>null</td>
  </tr>
  <tr>
    <td>Female</td>
    <td>35</td>
    <td>18</td>
    <td>117</td>
  </tr>
  <tr>
    <td>Other</td>
    <td>37</td>
    <td>18</td>
    <td>117</td>
  </tr>
  <tr>
    <td>Male</td>
    <td>37</td>
    <td>18</td>
    <td>131</td>
  </tr>
</table>

<p><br /></p>

<h3 id="the-number-of-unique-bikes">The number of unique bikes</h3>
<p><br /></p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>df.select("bike_id").distinct().count()
</code></pre></div></div>
<p><br />
Result: 3673
<br /></p>
<h3 id="number-of-unique-bike-stations">Number of unique bike stations</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>df.dropDuplicates(['start_station_name','end_station_name']).select('start_station_name').distinct().count()
</code></pre></div></div>
<p>Result: 272</p>

<h3 id="which-bike-was-rented-the-longest-and-which-was-the-shortest-during-the-analyzed-period-and-for-how-long">Which bike was rented the longest and which was the shortest during the analyzed period (and for how long)</h3>

<h4 id="max-rent-time">MAX RENT TIME</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aggData = df.groupBy('bike_id').agg(
    F.expr("count(bike_id)").alias("Total No of rents"),
    F.expr("avg(duration_sec)").alias("AVG Rent Time"),
    F.expr("min(duration_sec)").alias("MIN Rent Time"),
    F.expr("max(duration_sec)").alias("MAX Rent Time")
).orderBy("MAX Rent Time",ascending=False)
aggData.show(1)
</code></pre></div></div>

<p><br /></p>

<table style="width:700px">
  <tr>
    <th>bike_id</th>
    <th>Total No of rents</th>
    <th>AVG Rent Time</th>
    <th>MIN Rent Time</th>
    <th>MAX Rent Time</th>
  </tr>
  <tr>
    <td>2231</td>
    <td>95</td>
    <td>2939</td>
    <td>126</td>
    <td>86369</td>
  </tr>
</table>

<p><br /></p>

<h4 id="max-number-of-rentals">MAX NUMBER OF RENTALS</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aggData.orderBy("Total No of rents",ascending=False).show(1)
</code></pre></div></div>

<p><br /></p>

<table style="width:700px">
  <tr>
    <th>bike_id</th>
    <th>Total No of rents</th>
    <th>AVG Rent Time</th>
    <th>MIN Rent Time</th>
    <th>MAX Rent Time</th>
  </tr>
  <tr>
    <td>68</td>
    <td>457</td>
    <td>903</td>
    <td>85</td>
    <td>22318</td>
  </tr>
</table>

<p><br /></p>

<h4 id="min-rent-time">MIN RENT TIME</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aggData.orderBy("MIN Rent Time",ascending=True).show(1)
</code></pre></div></div>

<p><br /></p>

<table style="width:700px">
  <tr>
    <th>bike_id</th>
    <th>Total No of rents</th>
    <th>AVG Rent Time</th>
    <th>MIN Rent Time</th>
    <th>MAX Rent Time</th>
  </tr>
  <tr>
    <td>1238</td>
    <td>110</td>
    <td>1041</td>
    <td>61</td>
    <td>16288</td>
  </tr>
</table>

<p><br /></p>

<h4 id="highest-avg-rent-time">HIGHEST AVG RENT TIME</h4>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>aggData.orderBy("AVG Rent Time",ascending=False).show(1)
</code></pre></div></div>
<p><br /></p>

<table style="width:700px">
  <tr>
    <th>bike_id</th>
    <th>Total No of rents</th>
    <th>AVG Rent Time</th>
    <th>MIN Rent Time</th>
    <th>MAX Rent Time</th>
  </tr>
  <tr>
    <td>3730</td>
    <td>8</td>
    <td>11461</td>
    <td>598</td>
    <td>79841</td>
  </tr>
</table>

<p><br /></p>

<h3 id="average-duration-of-a-single-loan">Average duration of a single loan</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>df.select(mean('duration_sec').alias("AVG rent time")).show()
</code></pre></div></div>
<p>Result: 1099</p>

<h3 id="between-which-stations-there-was-the-greatest-traffic">Between which stations there was the greatest traffic</h3>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>df.groupBy('start_station_name', 'end_station_name').agg(
    F.expr("count(bike_id)").alias("Total No of connections"))\
.orderBy("Total No of connections",ascending=False).show(1)
</code></pre></div></div>
<p><br /></p>

<table style="width:700px">
  <tr>
    <th>start_station_name</th>
    <th>end_station_name</th>
    <th>Total No of connections</th>

  </tr>
  <tr>
    <td>San Francisco Ferry Building (Harry Bridges Plaza)</td>
    <td>The Embarcadero at Sansome St</td>
    <td>3344</td>
  </tr>
</table>

<p><br /></p>

<h3 id="at-what-time-during-the-day-were-the-most-bicycles-rented">At what time during the day were the most bicycles rented</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>df.withColumn("Ex Time of Rent", date_format('start_time', 'HH:mm'))\
.select("Ex Time of Rent")\
.groupBy('Ex Time of Rent').count()\
.orderBy("count",ascending=False).show(1) 
</code></pre></div></div>

<p><br /></p>

<table style="width:200px">
  <tr>
    <th>Ex Time of Rent</th>
    <th>count</th>
  </tr>
  <tr>
    <td>17:09</td>
    <td>1208</td>
  </tr>
</table>

<p><br /></p>
<h3 id="the-average-number-of-rentals-for-individual-days-of-the-week">The average number of rentals for individual days of the week</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>df.withColumn("Rent day", date_format('start_time', 'EEEE')).select('Rent day')\
.groupBy('Rent day').count()\
.orderBy("count",ascending=False).show() 
</code></pre></div></div>
<p><br /></p>

<table style="width:200px">
  <tr>
    <th>Rent day</th>
    <th>count</th>
  </tr>
  <tr>
    <td>Tuesday</td>
    <td>87865</td>
  </tr>
   <tr>
    <td>Wednesday</td>
    <td>87752</td>
  </tr>
   <tr>
    <td>Thursday</td>
    <td>85243</td>
  </tr>
   <tr>
    <td>Monday</td>
    <td>81410</td>
  </tr>
   <tr>
    <td>Friday</td>
    <td>81165</td>
  </tr>
   <tr>
    <td>Saturday</td>
    <td>50874</td>
  </tr>
   <tr>
    <td>Sunday</td>
    <td>45391</td>
  </tr>
</table>

<p><br /></p>

<h3 id="the-average-number-of-rentals-for-individual-months">The average number of rentals for individual months</h3>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>df.withColumn("Rent month", date_format('start_time', 'MMMM'))\
.select('Rent month').groupBy('Rent month').count()\
.orderBy("count",ascending=False).show() 
</code></pre></div></div>
<p><br /></p>

<table style="width:200px">
  <tr>
    <th>Rent month</th>
    <th>count</th>
  </tr>
  <tr>
    <td>October</td>
    <td>108937</td>
  </tr>
   <tr>
    <td>September</td>
    <td>98558</td>
  </tr>
   <tr>
    <td>November</td>
    <td>95612</td>
  </tr>
   <tr>
    <td>December</td>
    <td>86539</td>
  </tr>
   <tr>
    <td>August</td>
    <td>83292</td>
  </tr>
   <tr>
    <td>July</td>
    <td>44073</td>
  </tr>
   <tr>
    <td>June</td>
    <td>2689</td>
  </tr>
</table>

<p><br /></p>

<h3 id="rdd-datadaily-containing-data-aggregated-down-to-the-level-of-the-day-each-day-of-the-year-element-in-rdd-is-to-contain-the-following-information">RDD dataDaily containing data aggregated down to the level of the day. Each day of the year (element in RDD) is to contain the following information:</h3>

<ul>
  <li>‘date’ : Date</li>
  <li>‘avg_duration_sec’ : Average duration of rentals for the day</li>
  <li>‘n_trips’ : liczba wypożyczeń danego dnia</li>
  <li>‘n_bikes’ : number of rentals on a given day</li>
  <li>‘n_subscriber’ : number of rentals made by subscribers on a given day</li>
</ul>
:ET