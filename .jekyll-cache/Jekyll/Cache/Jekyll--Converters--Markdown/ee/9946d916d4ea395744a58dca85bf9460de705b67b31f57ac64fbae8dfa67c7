I"<h3 id="1-context">1. Context</h3>
<p>The project goal was to extract data from Twitter API and transfer it to MySql database for further data analysis. 
The Twitter API allows to stream public Tweets from the platform in real-time so that basic metrics about them can be obtained.</p>

<p>The data was created from tweets traffic, which contains two hashtags: â€˜granicaâ€™, â€˜biaÅ‚oruÅ›â€™. Those hashtags were popular during Poland border crisis 
in Q4 of 2021. Data was collected on 01.12.2021 and cosist of 3000 tweets.</p>

<h3 id="2-project-architecture">2. Project architecture</h3>

<p><span>
    <img src="/assets/img/architecture.PNG" style="width:100%" />
</span></p>

<p>Connecting to Google Cloud SQL Platform:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>def store_data(column_name):
    mydb = mysql.connector.connect(host='00.000.000.000', port=0000, \
        user='user_name',passwd='',db='db_name', charset='utf8mb4')
    cursor = mydb.cursor()
    table_name = 'table_name'
    insert_query = f"INSERT INTO {table_name} (column_name) VALUES (%s)"
    cursor.execute(insert_query, (id, column_name))
    mydb.commit()
    cursor.close()
    mydb.close()
    return

</code></pre></div></div>

<p>Cloud monitoring is important process of reviewing and managing the operational workflow and processes within a cloud infrastructure or asset.
Additionaly due to payment methods â€˜pay for what you useâ€™, it is crucial to control cloud infrastructure, that is why AWS E2 and Google Cloud
are providing with following monitoring tools:</p>

<h3 id="aws-ec2-usage-monitoring">AWS EC2 usage monitoring</h3>
<p><span>
    <img src="/assets/img/aws_cloud.PNG" style="width:80%" />
</span></p>

<h3 id="google-cloud-platform-sql-usage-monitoring">Google Cloud Platform SQL usage monitoring</h3>
<p><span>
    <img src="/assets/img/gcp_sql.PNG" style="width:80%" />
</span></p>

<h3 id="3-data-analysis">3. Data analysis</h3>
<p>Data cleaning and data manipulation were performed using Pandas framework.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>df['u_device'] = df['source'].apply(lambda s: s[s.find('&gt;')+1:s.find('&lt;/a&gt;')])
ax = (df.u_device.value_counts()/len(df)*100).iloc[:5].plot(kind="bar", rot=0)
ax.set_yticks(np.arange(0, 60, 10));
</code></pre></div></div>
<p><span>
    <img src="/assets/img/device.PNG" style="width:80%" />
</span></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>df['u_created_at'] = df['u_created_at'].apply(lambda x: datetime.strptime(x, '%a %b %d %X %z %Y'))
df['u_created_at_year'] = pd.DatetimeIndex(df['u_created_at']).year
ax = sns.barplot(x="u_created_at_year", y="u_created_at_year", data=df, estimator=lambda x: len(x) / len(df) * 100)
</code></pre></div></div>
<p><span>
    <img src="/assets/img/join_year.PNG" style="width:80%" />
</span></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>df['created_at_hour'] = df['created_at'].apply(lambda x: datetime.strptime(x, '%Y-%m-%d %H:%M:%S')).dt.hour
ax = sns.barplot(x='created_at_hour', y='created_at_hour', data=df, estimator=lambda x: len(x) / len(df) * 100)
</code></pre></div></div>
<p><span>
    <img src="/assets/img/post_date.PNG" style="width:80%" />
</span></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>df['u_followers_count_h'] = (df['u_followers_count']//500)*500
ax = sns.barplot(x="u_followers_count_h", y="u_followers_count_h", data=df, estimator=lambda x: len(x) / len(df) * 100, order=plot_order[0:10])
</code></pre></div></div>

<p><span>
    <img src="/assets/img/followers.PNG" style="width:80%" />
</span></p>
:ET